#!/bin/bash
# Copyright (C) 2012-2013 The SaberMod Project
# Build Script.  Use bash to run this script, bash sm-mako from source directory
export USING_BUILD_SCRIPTS=true;
export MANUFACTURER=lge;
export DEVICE=mako;
export BUILD=SaberMod;
export KERNEL=mako;

# Use AOSP' GCC 4.6 toolchain for arm-eabi
export USE_AOSP_46_ARMEABI=true;

# Source Directory PATH
export DIRSRC="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";

# Output directory PATH
export OUT_DIR_COMMON_BASE=$DIRSRC/out/$DEVICE;

# Disable c++11 mode
export DEBUG_NO_STDCXX11=yes;

# ccache. Set up ccache to your liking prior to running this script
export CCACHE_DIR=$DIRSRC/prebuilts/misc/linux-x86/ccache;
export USE_CCACHE=1;

# clean Steps
if [ -d $DIRSRC/out/$DEVICE/$BUILD ];
then
    echo "Cleaning the output directory"
    echo ""
    rm -rf $DIRSRC/out/$DEVICE/$BUILD/target/product/$DEVICE/*.img $DIRSRC/out/$DEVICE/$BUILD/target/product/$DEVICE/*.zip $DIRSRC/out/$DEVICE/$BUILD/target/product/$DEVICE/system/build.prop $DIRSRC/out/$DEVICE/$BUILD/target/product/$DEVICE/*.md5sum $DIRSRC/out/$DEVICE/$BUILD/target/product/$DEVICE/kernel
fi;

# Check for required scripts
if [ -e $DIRSRC/$KERNEL-kernel ];
then

    # Start the build
    echo "" && echo "Building kernel before ROM" && bash $DIRSRC/$KERNEL-kernel && echo "Starting the ROM build" && echo "" && . build/envsetup.sh && lunch sm_$DEVICE-user && time make -j `cat /proc/cpuinfo | grep "^processor" | wc -l` "$@" otapackage;

    # Build is complete, (hopefully without errors)
    cd $DIRSRC/device/$MANUFACTURER/$DEVICE && git reset --hard && cd $DIRSRC/device/$MANUFACTURER/mako-kernel && git reset --hard && cd $DIRSRC;
    echo "Finished!";
    echo "";
else

    # Start the build
    echo "" && echo "No kernel script found, ignoring and treating as normal" && echo "" && echo "Starting the ROM build" && echo "" && . build/envsetup.sh && lunch sm_$DEVICE-user && time make -j `cat /proc/cpuinfo | grep "^processor" | wc -l` "$@" otapackage;

    # Build is complete, (hopefully without errors)
    cd $DIRSRC/device/$MANUFACTURER/$DEVICE && git reset --hard && cd $DIRSRC/device/cd $DIRSRC/device/$MANUFACTURER/mako-kernel && git reset --hard && cd $DIRSRC;
    echo "Finished!";
    echo "";
fi;

